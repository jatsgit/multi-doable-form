{"ast":null,"code":"var _jsxFileName = \"/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport { createOvermind } from 'overmind';\nimport { Provider } from 'overmind-react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport useSWR from 'swr'; //Bootstrap css\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; //Index.scss file should be above layout layout and components after Bootstrap css\n\nimport styles from './index.scss'; //Custom Layout Components\n\nimport Layout from '../components/Layout';\nimport RSVPForm from '../components/rsvp-form';\nimport { useOvermind } from '../overmind';\nconsole.log(useOvermind);\nconst overmind = createOvermind(config, {\n  devtools: 'localhost:3000'\n});\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    state,\n    actions\n  } = useOvermind();\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher);\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = \"Loading...\";\n  if (error) quote = \"Failed to fetch quotes\";\n  return __jsx(Layout, {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-627141962\" + \" \" + \"mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-627141962\" + \" \" + (styles.quote || \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-627141962\" + \" \" + (styles.author || \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"- \", author), __jsx(Link, {\n    href: \"/rsvp-scanner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"jsx-627141962\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Goto RSVP Scanner\"))), __jsx(RSVPForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"627141962\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXRpbmRlcmJpbXJhL3dvcmsveGxiYi9yc3ZwLW5leHQvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0R3QiIsImZpbGUiOiIvVXNlcnMvamF0aW5kZXJiaW1yYS93b3JrL3hsYmIvcnN2cC1uZXh0L3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBjcmVhdGVPdmVybWluZCB9IGZyb20gJ292ZXJtaW5kJztcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAnb3Zlcm1pbmQtcmVhY3QnO1xuXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcblxuLy9Cb290c3RyYXAgY3NzXG5pbXBvcnQgJ2Jvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyc7XG4vL0luZGV4LnNjc3MgZmlsZSBzaG91bGQgYmUgYWJvdmUgbGF5b3V0IGxheW91dCBhbmQgY29tcG9uZW50cyBhZnRlciBCb290c3RyYXAgY3NzXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vaW5kZXguc2Nzcyc7XG5cbi8vQ3VzdG9tIExheW91dCBDb21wb25lbnRzXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBSU1ZQRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL3JzdnAtZm9ybSc7XG5cbmltcG9ydCB7IHVzZU92ZXJtaW5kIH0gZnJvbSAnLi4vb3Zlcm1pbmQnO1xuXG5jb25zb2xlLmxvZyh1c2VPdmVybWluZCk7XG5cbmNvbnN0IG92ZXJtaW5kID0gY3JlYXRlT3Zlcm1pbmQoY29uZmlnLCB7XG4gICAgZGV2dG9vbHM6ICdsb2NhbGhvc3Q6MzAwMCdcbn0pO1xuXG5mdW5jdGlvbiBmZXRjaGVyKHVybCkge1xuICAgIHJldHVybiBmZXRjaCh1cmwpLnRoZW4ociA9PiByLmpzb24oKSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG4gICAgY29uc3QgeyBzdGF0ZSwgYWN0aW9ucyB9ID0gdXNlT3Zlcm1pbmQoKTtcbiAgICBjb25zdCB7IHF1ZXJ5IH0gPSB1c2VSb3V0ZXIoKTtcblxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUihgL2FwaS9yYW5kb21RdW90ZSR7cXVlcnkuYXV0aG9yID8gJz9hdXRob3I9JyArIHF1ZXJ5LmF1dGhvciA6ICcnfWAsIGZldGNoZXIpO1xuXG4gICAgY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xuICAgIGxldCBxdW90ZSA9IGRhdGE/LnF1b3RlO1xuXG4gICAgaWYgKCFkYXRhKSBxdW90ZSA9IFwiTG9hZGluZy4uLlwiO1xuICAgIGlmIChlcnJvcikgcXVvdGUgPSBcIkZhaWxlZCB0byBmZXRjaCBxdW90ZXNcIjtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxMYXlvdXQgY2xhc3NOYW1lPVwiXCI+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWItNVwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMucXVvdGV9PntxdW90ZX08L2Rpdj5cbiAgICAgICAgICAgICAgICB7YXV0aG9yICYmIDxzcGFuIGNsYXNzTmFtZT17c3R5bGVzLmF1dGhvcn0+LSB7YXV0aG9yfTwvc3Bhbj59XG5cbiAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JzdnAtc2Nhbm5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8YT5Hb3RvIFJTVlAgU2Nhbm5lcjwvYT5cbiAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPFJTVlBGb3JtPjwvUlNWUEZvcm0+XG5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9MYXlvdXQ+XG4gICAgKVxufSJdfQ== */\\n/*@ sourceURL=/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js"],"names":["createOvermind","Provider","Link","useRouter","React","useSWR","styles","Layout","RSVPForm","useOvermind","console","log","overmind","config","devtools","fetcher","url","fetch","then","r","json","Index","state","actions","query","data","error","author","quote"],"mappings":";;;AACA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CAEA;;AACA,OAAO,sCAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEAC,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEA,MAAMG,QAAQ,GAAGZ,cAAc,CAACa,MAAD,EAAS;AACpCC,EAAAA,QAAQ,EAAE;AAD0B,CAAT,CAA/B;;AAIA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBd,WAAW,EAAtC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAYrB,SAAS,EAA3B;AAEA,QAAM;AAAEsB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBrB,MAAM,CAAE,mBAAkBmB,KAAK,CAACG,MAAN,GAAe,aAAaH,KAAK,CAACG,MAAlC,GAA2C,EAAG,EAAlE,EAAqEZ,OAArE,CAA9B;AAEA,QAAMY,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAAlB;AAEA,MAAI,CAACH,IAAL,EAAWG,KAAK,GAAG,YAAR;AACX,MAAIF,KAAJ,EAAWE,KAAK,GAAG,wBAAR;AAEX,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA,uCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAgBtB,MAAM,CAACsB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,KAA/B,CADJ,EAEKD,MAAM,IAAI;AAAA,wCAAiBrB,MAAM,CAACqB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCA,MAAnC,CAFf,EAII,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAJJ,CAFJ,EAWI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ;AAAA;AAAA;AAAA,4kFADJ;AAmBH","sourcesContent":["\nimport { createOvermind } from 'overmind';\nimport { Provider } from 'overmind-react';\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport useSWR from 'swr';\n\n//Bootstrap css\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//Index.scss file should be above layout layout and components after Bootstrap css\nimport styles from './index.scss';\n\n//Custom Layout Components\nimport Layout from '../components/Layout';\nimport RSVPForm from '../components/rsvp-form';\n\nimport { useOvermind } from '../overmind';\n\nconsole.log(useOvermind);\n\nconst overmind = createOvermind(config, {\n    devtools: 'localhost:3000'\n});\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json())\n}\n\nexport default function Index() {\n    const { state, actions } = useOvermind();\n    const { query } = useRouter();\n\n    const { data, error } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher);\n\n    const author = data?.author;\n    let quote = data?.quote;\n\n    if (!data) quote = \"Loading...\";\n    if (error) quote = \"Failed to fetch quotes\";\n\n    return (\n        <Layout className=\"\">\n\n            <div className=\"mb-5\">\n                <div className={styles.quote}>{quote}</div>\n                {author && <span className={styles.author}>- {author}</span>}\n\n                <Link href=\"/rsvp-scanner\">\n                    <a>Goto RSVP Scanner</a>\n                </Link>\n            </div>\n\n            <RSVPForm></RSVPForm>\n\n            <style jsx>{`\n                \n            `}</style>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}