{"ast":null,"code":"var _jsxFileName = \"/Users/jatinderbimra/work/xlbb/rsvp-next/components/RSVPForm/proxy-holder/sub-fields.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport { useForm, ErrorMessage } from 'react-hook-form';\nimport { useOvermind } from '../../../overmind';\nimport { phonePattern1, emailPattern, KTP_SID_SEARCH_HIT_MIN_CHARS } from '../../../util/constants';\nimport { reCaptchaInitialize, verifyCaptcha } from '../../../util/index';\nexport default function RSVPProxyHolderSubFields(props) {\n  const {\n    state,\n    actions\n  } = useOvermind();\n  const {\n    register,\n    errors,\n    handleSubmit,\n    watch,\n    formState\n  } = useForm({\n    mode: 'onChange',\n    validateCriteriaMode: \"all\"\n  });\n  console.log('data from props', props.data);\n  const {\n    title,\n    subFields\n  } = props.data;\n  console.log('subFields ', subFields);\n  const {\n    numberKTUR,\n    numberSID,\n    name,\n    passport,\n    address,\n    numberOfShares,\n    phoneNumber,\n    email,\n    uploadID,\n    uploadArticleOfAssociation,\n    uploadProxy,\n    captcha,\n    userAcceptance,\n    submitButton,\n    infoText,\n    successMsgTitle,\n    successMsg,\n    failedMsgTitle,\n    failedMsg,\n    redirectURL\n  } = subFields || {};\n  const watchNoKtur = watch(\"numberKTUR\");\n  const watchNoSID = watch(\"numberSID\");\n  const watchHidCaptcha = watch(\"hidGRecaptchaElement\");\n\n  const onSubmit = (data, e) => {\n    console.log(\"Form submitted \", data, e);\n  }; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(() => {// if(!window.grecaptcha) reCaptchaInitialize('v2');\n    // console.log('watchHidCaptcha', watchHidCaptcha);\n  }, [watchHidCaptcha]);\n  useEffect(() => {\n    if (state.rsvp.isSIDKTPVerified) {\n      // verifyCaptcha\n      verifyCaptcha(captcha.hiddenField.name);\n    } // console.log('watchNoKtur', watchNoKtur);\n    // console.log('watchNoSID', watchNoSID);\n\n\n    if (watchNoKtur && watchNoKtur.length > KTP_SID_SEARCH_HIT_MIN_CHARS && watchNoSID && watchNoSID.length > KTP_SID_SEARCH_HIT_MIN_CHARS) {\n      console.log('trigger api call to verify use is having valid sid and ktp '); // actions.rsvp.verifyValidUser();\n\n      actions.rsvp.updateSIDKTPVerifedStatus(); // if(window.grecaptcha) grecaptcha.reset('gRecaptchaElement');\n\n      if (!window.grecaptcha) reCaptchaInitialize('v2');\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" \", subFields && JSON.stringify(subFields, null, 2)));\n}","map":{"version":3,"sources":["/Users/jatinderbimra/work/xlbb/rsvp-next/components/RSVPForm/proxy-holder/sub-fields.js"],"names":["React","useEffect","useRef","useForm","ErrorMessage","useOvermind","phonePattern1","emailPattern","KTP_SID_SEARCH_HIT_MIN_CHARS","reCaptchaInitialize","verifyCaptcha","RSVPProxyHolderSubFields","props","state","actions","register","errors","handleSubmit","watch","formState","mode","validateCriteriaMode","console","log","data","title","subFields","numberKTUR","numberSID","name","passport","address","numberOfShares","phoneNumber","email","uploadID","uploadArticleOfAssociation","uploadProxy","captcha","userAcceptance","submitButton","infoText","successMsgTitle","successMsg","failedMsgTitle","failedMsg","redirectURL","watchNoKtur","watchNoSID","watchHidCaptcha","onSubmit","e","rsvp","isSIDKTPVerified","hiddenField","length","updateSIDKTPVerifedStatus","window","grecaptcha","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useForm, ErrorMessage } from 'react-hook-form';\nimport { useOvermind } from '../../../overmind';\n\nimport { phonePattern1, emailPattern, KTP_SID_SEARCH_HIT_MIN_CHARS } from '../../../util/constants';\nimport { reCaptchaInitialize, verifyCaptcha } from '../../../util/index';\n\nexport default function RSVPProxyHolderSubFields(props) {\n\n    const { state, actions } = useOvermind();\n    const { register, errors, handleSubmit, watch, formState } = useForm({\n        mode: 'onChange',\n        validateCriteriaMode: \"all\"\n    });\n    console.log('data from props', props.data);\n    \n    const { title, subFields } = props.data;\n    console.log('subFields ', subFields);\n    const {\n        numberKTUR,\n        numberSID,\n        name,\n        passport,\n        address,\n        numberOfShares,\n        phoneNumber,\n        email,\n        uploadID,\n        uploadArticleOfAssociation,\n        uploadProxy,\n        captcha,\n        userAcceptance,\n        submitButton,\n        infoText,\n        successMsgTitle,\n        successMsg,\n        failedMsgTitle,\n        failedMsg,\n        redirectURL\n    } = subFields || {};\n\n    const watchNoKtur = watch(\"numberKTUR\");\n    const watchNoSID = watch(\"numberSID\");\n    const watchHidCaptcha = watch(\"hidGRecaptchaElement\");\n\n    const onSubmit = (data, e) => {\n        console.log(\"Form submitted \", data, e)\n    };\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n        // if(!window.grecaptcha) reCaptchaInitialize('v2');\n\n        // console.log('watchHidCaptcha', watchHidCaptcha);\n\n    }, [watchHidCaptcha]);\n\n    useEffect(() => {\n        if (state.rsvp.isSIDKTPVerified) {\n            // verifyCaptcha\n            verifyCaptcha(captcha.hiddenField.name);\n        }\n        // console.log('watchNoKtur', watchNoKtur);\n        // console.log('watchNoSID', watchNoSID);\n\n        if ((watchNoKtur && watchNoKtur.length > KTP_SID_SEARCH_HIT_MIN_CHARS) && (watchNoSID && watchNoSID.length > KTP_SID_SEARCH_HIT_MIN_CHARS)) {\n            console.log('trigger api call to verify use is having valid sid and ktp ');\n\n            // actions.rsvp.verifyValidUser();\n\n            actions.rsvp.updateSIDKTPVerifedStatus();\n\n            // if(window.grecaptcha) grecaptcha.reset('gRecaptchaElement');\n            if (!window.grecaptcha) reCaptchaInitialize('v2');\n        }\n    });\n\n    return (\n        <div>\n\n            <pre> {subFields && JSON.stringify(subFields, null, 2)}</pre>\n\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}