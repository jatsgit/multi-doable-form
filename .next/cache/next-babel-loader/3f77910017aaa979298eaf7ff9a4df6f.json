{"ast":null,"code":"var _jsxFileName = \"/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js\";\nvar __jsx = React.createElement;\nimport { createOvermind } from 'overmind';\nimport { Provider } from 'overmind-react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport useSWR from 'swr'; //Overmind state management\n\nimport { config, useOvermind } from '../overmind'; //Bootstrap css\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; //Index.scss file should be above layout layout and components after Bootstrap css\n\nimport styles from './index.scss'; //Custom Layout Components\n\nimport Layout from '../components/Layout';\nimport RSVPForm from '../components/RSVPForm';\nconst overmind = createOvermind(config, {// devtools: 'localhost:3000'\n});\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher);\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = \"Loading...\";\n  if (error) quote = \"Failed to fetch quotes\";\n  return __jsx(Provider, {\n    value: overmind,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Layout, {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js"],"names":["createOvermind","Provider","Link","useRouter","React","useSWR","config","useOvermind","styles","Layout","RSVPForm","overmind","fetcher","url","fetch","then","r","json","Index","query","data","error","author","quote"],"mappings":";;AACA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,aAApC,C,CAEA;;AACA,OAAO,sCAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,MAAMC,QAAQ,GAAGX,cAAc,CAACM,MAAD,EAAS,CACpC;AADoC,CAAT,CAA/B;;AAIA,SAASM,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAYhB,SAAS,EAA3B;AAEA,QAAM;AAAEiB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBhB,MAAM,CAAE,mBAAkBc,KAAK,CAACG,MAAN,GAAe,aAAaH,KAAK,CAACG,MAAlC,GAA2C,EAAG,EAAlE,EAAqEV,OAArE,CAA9B;AAEA,QAAMU,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAAlB;AAEA,MAAI,CAACH,IAAL,EAAWG,KAAK,GAAG,YAAR;AACX,MAAIF,KAAJ,EAAWE,KAAK,GAAG,wBAAR;AAEX,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEZ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAQH","sourcesContent":["\nimport { createOvermind } from 'overmind';\nimport { Provider } from 'overmind-react';\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport useSWR from 'swr';\n\n//Overmind state management\nimport { config, useOvermind } from '../overmind';\n\n//Bootstrap css\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//Index.scss file should be above layout layout and components after Bootstrap css\nimport styles from './index.scss';\n\n//Custom Layout Components\nimport Layout from '../components/Layout';\nimport RSVPForm from '../components/RSVPForm';\n\nconst overmind = createOvermind(config, {\n    // devtools: 'localhost:3000'\n});\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json())\n}\n\nexport default function Index() {\n    const { query } = useRouter();\n\n    const { data, error } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher);\n\n    const author = data?.author;\n    let quote = data?.quote;\n\n    if (!data) quote = \"Loading...\";\n    if (error) quote = \"Failed to fetch quotes\";\n\n    return (\n        <Provider value={overmind}>\n            <Layout className=\"\">\n\n                \n            </Layout>\n        </Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}