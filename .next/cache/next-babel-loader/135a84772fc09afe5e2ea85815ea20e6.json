{"ast":null,"code":"var _jsxFileName = \"/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher);\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = \"Loading...\";\n  if (error) quote = \"Failed to fetch quotes\";\n  return __jsx(Layout, {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-2784500225\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-2784500225\" + \" \" + \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"- \", author), __jsx(\"p\", {\n    className: \"jsx-2784500225\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Hello Next.js\"), __jsx(Link, {\n    href: \"/rsvp-scanner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"jsx-2784500225\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Goto RSVP Scanner\")), __jsx(_JSXStyle, {\n    id: \"2784500225\",\n    __self: this\n  }, \".main.jsx-2784500225{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-2784500225{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-2784500225{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXRpbmRlcmJpbXJhL3dvcmsveGxiYi9yc3ZwLW5leHQvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEJ3QixBQUcyQixBQU1VLEFBTUcsVUFYUCxVQU1GLEdBTUEsR0FYSSxRQU1ILEdBTUEsT0FYRyxLQU1FLEdBTXBCLFVBWEEsT0FNQSIsImZpbGUiOiIvVXNlcnMvamF0aW5kZXJiaW1yYS93b3JrL3hsYmIvcnN2cC1uZXh0L3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcblxuZnVuY3Rpb24gZmV0Y2hlcih1cmwpIHtcbiAgICByZXR1cm4gZmV0Y2godXJsKS50aGVuKHIgPT4gci5qc29uKCkpXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEluZGV4KCkge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUihgL2FwaS9yYW5kb21RdW90ZSR7cXVlcnkuYXV0aG9yID8gJz9hdXRob3I9JyArIHF1ZXJ5LmF1dGhvciA6ICcnfWAsIGZldGNoZXIpO1xuXG4gICAgY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xuICAgIGxldCBxdW90ZSA9IGRhdGE/LnF1b3RlO1xuXG4gICAgaWYgKCFkYXRhKSBxdW90ZSA9IFwiTG9hZGluZy4uLlwiO1xuICAgIGlmIChlcnJvcikgcXVvdGUgPSBcIkZhaWxlZCB0byBmZXRjaCBxdW90ZXNcIjtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxMYXlvdXQgY2xhc3NOYW1lPVwibWFpblwiPlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1b3RlXCI+e3F1b3RlfTwvZGl2PlxuICAgICAgICAgICAge2F1dGhvciAmJiA8c3BhbiBjbGFzc05hbWU9XCJhdXRob3JcIj4tIHthdXRob3J9PC9zcGFuPn1cblxuICAgICAgICAgICAgPHA+SGVsbG8gTmV4dC5qczwvcD5cblxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9yc3ZwLXNjYW5uZXJcIj5cbiAgICAgICAgICAgICAgICA8YT5Hb3RvIFJTVlAgU2Nhbm5lcjwvYT5cbiAgICAgICAgICAgIDwvTGluaz5cblxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC5tYWluIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogOTAwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAzMDBweCBhdXRvO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnF1b3RlIHtcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogI2UyNDNkZTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5hdXRob3Ige1xuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjNTU5ODM0O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvTGF5b3V0PlxuICAgIClcbn0iXX0= */\\n/*@ sourceURL=/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js"],"names":["React","Link","Layout","useSWR","fetcher","url","fetch","then","r","json","Index","data","error","query","author","quote"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,MAAM,CAAE,mBAAkBU,KAAK,CAACC,MAAN,GAAe,aAAaD,KAAK,CAACC,MAAlC,GAA2C,EAAG,EAAlE,EAAqEV,OAArE,CAA9B;AAEA,QAAMU,MAAM,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,MAArB;AACA,MAAIC,KAAK,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,KAAlB;AAEA,MAAI,CAACJ,IAAL,EAAWI,KAAK,GAAG,YAAR;AACX,MAAIH,KAAJ,EAAWG,KAAK,GAAG,wBAAR;AAEX,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CAFJ,EAGKD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAHf,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,EAOI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAPJ;AAAA;AAAA;AAAA,ooFADJ;AAiCH","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json())\n}\n\nexport default function Index() {\n    const { data, error } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher);\n\n    const author = data?.author;\n    let quote = data?.quote;\n\n    if (!data) quote = \"Loading...\";\n    if (error) quote = \"Failed to fetch quotes\";\n\n    return (\n        <Layout className=\"main\">\n\n            <div className=\"quote\">{quote}</div>\n            {author && <span className=\"author\">- {author}</span>}\n\n            <p>Hello Next.js</p>\n\n            <Link href=\"/rsvp-scanner\">\n                <a>Goto RSVP Scanner</a>\n            </Link>\n\n            <style jsx>{`\n                .main {\n                width: 90%;\n                max-width: 900px;\n                margin: 300px auto;\n                text-align: center;\n                }\n                .quote {\n                font-family: cursive;\n                color: #e243de;\n                font-size: 24px;\n                padding-bottom: 10px;\n                }\n                .author {\n                font-family: sans-serif;\n                color: #559834;\n                font-size: 20px;\n                }\n            `}</style>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}