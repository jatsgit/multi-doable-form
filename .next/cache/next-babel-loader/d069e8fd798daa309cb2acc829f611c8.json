{"ast":null,"code":"var _jsxFileName = \"/Users/jatinderbimra/work/xlbb/rsvp-next/components/RSVPForm/proxy-holder/sub-fields.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport { useForm, ErrorMessage } from 'react-hook-form';\nimport { useOvermind } from '../../../overmind';\nimport { phonePattern1, emailPattern, KTP_SID_SEARCH_HIT_MIN_CHARS } from '../../../util/constants';\nimport { reCaptchaInitialize, verifyCaptcha } from '../../../util/index';\nexport default function RSVPProxyHolderSubFields(props) {\n  var _useOvermind = useOvermind(),\n      state = _useOvermind.state,\n      actions = _useOvermind.actions;\n\n  var _useForm = useForm({\n    mode: 'onChange',\n    validateCriteriaMode: \"all\"\n  }),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      formState = _useForm.formState;\n\n  console.log('data from props', props.data);\n\n  var _ref = props.data || {},\n      numberKTUR = _ref.numberKTUR,\n      numberSID = _ref.numberSID,\n      name = _ref.name,\n      passport = _ref.passport,\n      address = _ref.address,\n      numberOfShares = _ref.numberOfShares,\n      phoneNumber = _ref.phoneNumber,\n      email = _ref.email,\n      uploadID = _ref.uploadID,\n      uploadArticleOfAssociation = _ref.uploadArticleOfAssociation,\n      uploadProxy = _ref.uploadProxy,\n      captcha = _ref.captcha,\n      userAcceptance = _ref.userAcceptance,\n      submitButton = _ref.submitButton,\n      infoText = _ref.infoText,\n      successMsgTitle = _ref.successMsgTitle,\n      successMsg = _ref.successMsg,\n      failedMsgTitle = _ref.failedMsgTitle,\n      failedMsg = _ref.failedMsg,\n      redirectURL = _ref.redirectURL;\n\n  var watchNoKtur = watch(\"numberKTUR\");\n  var watchNoSID = watch(\"numberSID\");\n  var watchHidCaptcha = watch(\"hidGRecaptchaElement\");\n\n  var onSubmit = function onSubmit(data, e) {\n    console.log(\"Form submitted \", data, e);\n  }; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(function () {// if(!window.grecaptcha) reCaptchaInitialize('v2');\n    // console.log('watchHidCaptcha', watchHidCaptcha);\n  }, [watchHidCaptcha]);\n  useEffect(function () {\n    if (state.rsvp.isSIDKTPVerified) {\n      // verifyCaptcha\n      verifyCaptcha(captcha.hiddenField.name);\n    } // console.log('watchNoKtur', watchNoKtur);\n    // console.log('watchNoSID', watchNoSID);\n\n\n    if (watchNoKtur && watchNoKtur.length > KTP_SID_SEARCH_HIT_MIN_CHARS && watchNoSID && watchNoSID.length > KTP_SID_SEARCH_HIT_MIN_CHARS) {\n      console.log('trigger api call to verify use is having valid sid and ktp '); // actions.rsvp.verifyValidUser();\n\n      actions.rsvp.updateSIDKTPVerifedStatus(); // if(window.grecaptcha) grecaptcha.reset('gRecaptchaElement');\n\n      if (!window.grecaptcha) reCaptchaInitialize('v2');\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" \", subFields && JSON.stringify(subFields, null, 2)), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: numberKTUR.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, numberKTUR.label, \" \", numberKTUR.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: numberKTUR.name,\n    name: numberKTUR.name,\n    placeholder: numberKTUR.placeholder,\n    ref: register({\n      required: numberKTUR.validation.required_msg,\n      minLength: {\n        value: 6,\n        message: numberKTUR.validation.minlength_msg\n      }\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: numberKTUR.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: numberSID.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, numberSID.label, \" \", numberSID.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: numberSID.name,\n    name: numberSID.name,\n    placeholder: numberSID.placeholder,\n    ref: register({\n      required: numberSID.validation.required_msg,\n      minLength: {\n        value: 6,\n        message: numberSID.validation.minlength_msg\n      }\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: numberSID.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))), state.rsvp.isSIDKTPVerified === true ? __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: name.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, name.label, \" \", name.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: name.name,\n    name: name.name,\n    ref: register({\n      required: name.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: name.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: passport.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, passport.label, \" \", passport.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: passport.name,\n    name: passport.name,\n    placeholder: passport.placeholder,\n    ref: register({\n      required: passport.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: passport.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: address.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, address.label, \" \", address.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: address.name,\n    name: address.name,\n    placeholder: address.placeholder,\n    ref: register({\n      required: address.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: address.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: numberOfShares.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, numberOfShares.label, \" \", numberOfShares.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: numberOfShares.name,\n    name: numberOfShares.name,\n    placeholder: numberOfShares.placeholder,\n    ref: register({\n      required: numberOfShares.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: numberOfShares.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: phoneNumber.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, phoneNumber.label, \" \", phoneNumber.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: phoneNumber.name,\n    name: phoneNumber.name,\n    placeholder: phoneNumber.placeholder,\n    ref: register({\n      required: phoneNumber.validation.required_msg,\n      pattern: {\n        value: phonePattern1,\n        message: phoneNumber.validation.pattern_msg\n      }\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: phoneNumber.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: email.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, email.label, \" \", email.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: email.name,\n    name: email.name,\n    placeholder: email.placeholder,\n    ref: register({\n      required: email.validation.required_msg,\n      pattern: {\n        value: emailPattern,\n        message: email.validation.pattern_msg\n      }\n    }),\n    type: \"email\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: email.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"file-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: uploadID.name,\n    className: \"input-file-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"button button--2 button--axiata\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, uploadID.label), uploadID.placeholder, \" \", uploadID.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"*\") : '', __jsx(\"input\", {\n    id: uploadID.name,\n    name: uploadID.name,\n    ref: register({\n      required: uploadID.validation.required_msg\n    }),\n    type: \"file\",\n    className: \"input-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }))), uploadID.fileInfoLine1 || uploadID.fileInfoLine2 ? __jsx(\"div\", {\n    className: \"file-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, uploadID.fileInfoLine1 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, uploadID.fileInfoLine1) : '', uploadID.fileInfoLine2 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, uploadID.fileInfoLine2) : '') : '', __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: uploadID.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"file-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: uploadArticleOfAssociation.name,\n    className: \"input-file-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"button button--2 button--axiata\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, uploadArticleOfAssociation.label), uploadArticleOfAssociation.placeholder, \" \", uploadArticleOfAssociation.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"*\") : '', __jsx(\"input\", {\n    id: uploadArticleOfAssociation.name,\n    name: uploadArticleOfAssociation.name,\n    ref: register({\n      required: uploadArticleOfAssociation.validation.required_msg\n    }),\n    type: \"file\",\n    className: \"input-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }))), uploadArticleOfAssociation.fileInfoLine1 || uploadArticleOfAssociation.fileInfoLine2 ? __jsx(\"div\", {\n    className: \"file-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, uploadArticleOfAssociation.fileInfoLine1 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, uploadArticleOfAssociation.fileInfoLine1) : '', uploadArticleOfAssociation.fileInfoLine2 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, uploadArticleOfAssociation.fileInfoLine2) : '') : '', __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: uploadArticleOfAssociation.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"file-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: uploadProxy.name,\n    className: \"input-file-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"button button--2 button--axiata\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, uploadProxy.label), uploadProxy.placeholder, \" \", uploadID.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"*\") : '', __jsx(\"input\", {\n    id: uploadProxy.name,\n    name: uploadProxy.name,\n    ref: register({\n      required: uploadProxy.validation.required_msg\n    }),\n    type: \"file\",\n    className: \"input-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }))), uploadProxy.fileInfoLine1 || uploadProxy.fileInfoLine2 ? __jsx(\"div\", {\n    className: \"file-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, uploadProxy.fileInfoLine1 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, uploadProxy.fileInfoLine1) : '', uploadProxy.fileInfoLine2 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, uploadProxy.fileInfoLine2) : '') : '', __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: uploadProxy.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }))) : \"Please set subFields data\");\n}","map":{"version":3,"sources":["/Users/jatinderbimra/work/xlbb/rsvp-next/components/RSVPForm/proxy-holder/sub-fields.js"],"names":["React","useEffect","useRef","useForm","ErrorMessage","useOvermind","phonePattern1","emailPattern","KTP_SID_SEARCH_HIT_MIN_CHARS","reCaptchaInitialize","verifyCaptcha","RSVPProxyHolderSubFields","props","state","actions","mode","validateCriteriaMode","register","errors","handleSubmit","watch","formState","console","log","data","numberKTUR","numberSID","name","passport","address","numberOfShares","phoneNumber","email","uploadID","uploadArticleOfAssociation","uploadProxy","captcha","userAcceptance","submitButton","infoText","successMsgTitle","successMsg","failedMsgTitle","failedMsg","redirectURL","watchNoKtur","watchNoSID","watchHidCaptcha","onSubmit","e","rsvp","isSIDKTPVerified","hiddenField","length","updateSIDKTPVerifedStatus","window","grecaptcha","subFields","JSON","stringify","label","required","placeholder","validation","required_msg","minLength","value","message","minlength_msg","pattern","pattern_msg","fileInfoLine1","fileInfoLine2"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useForm, ErrorMessage } from 'react-hook-form';\nimport { useOvermind } from '../../../overmind';\n\nimport { phonePattern1, emailPattern, KTP_SID_SEARCH_HIT_MIN_CHARS } from '../../../util/constants';\nimport { reCaptchaInitialize, verifyCaptcha } from '../../../util/index';\n\nexport default function RSVPProxyHolderSubFields(props) {\n\n    const { state, actions } = useOvermind();\n    const { register, errors, handleSubmit, watch, formState } = useForm({\n        mode: 'onChange',\n        validateCriteriaMode: \"all\"\n    });\n    console.log('data from props', props.data);\n    \n    const {\n        numberKTUR,\n        numberSID,\n        name,\n        passport,\n        address,\n        numberOfShares,\n        phoneNumber,\n        email,\n        uploadID,\n        uploadArticleOfAssociation,\n        uploadProxy,\n        captcha,\n        userAcceptance,\n        submitButton,\n        infoText,\n        successMsgTitle,\n        successMsg,\n        failedMsgTitle,\n        failedMsg,\n        redirectURL\n    } = props.data || {};\n\n    const watchNoKtur = watch(\"numberKTUR\");\n    const watchNoSID = watch(\"numberSID\");\n    const watchHidCaptcha = watch(\"hidGRecaptchaElement\");\n\n    const onSubmit = (data, e) => {\n        console.log(\"Form submitted \", data, e)\n    };\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n        // if(!window.grecaptcha) reCaptchaInitialize('v2');\n\n        // console.log('watchHidCaptcha', watchHidCaptcha);\n\n    }, [watchHidCaptcha]);\n\n    useEffect(() => {\n        if (state.rsvp.isSIDKTPVerified) {\n            // verifyCaptcha\n            verifyCaptcha(captcha.hiddenField.name);\n        }\n        // console.log('watchNoKtur', watchNoKtur);\n        // console.log('watchNoSID', watchNoSID);\n\n        if ((watchNoKtur && watchNoKtur.length > KTP_SID_SEARCH_HIT_MIN_CHARS) && (watchNoSID && watchNoSID.length > KTP_SID_SEARCH_HIT_MIN_CHARS)) {\n            console.log('trigger api call to verify use is having valid sid and ktp ');\n\n            // actions.rsvp.verifyValidUser();\n\n            actions.rsvp.updateSIDKTPVerifedStatus();\n\n            // if(window.grecaptcha) grecaptcha.reset('gRecaptchaElement');\n            if (!window.grecaptcha) reCaptchaInitialize('v2');\n        }\n    });\n\n    return (\n        <div>\n\n            <pre> {subFields && JSON.stringify(subFields, null, 2)}</pre>\n\n            <div className=\"form-group\">\n                <label htmlFor={numberKTUR.name} className=\"col-form-label\">{numberKTUR.label} {numberKTUR.required ? (<span className=\"required\">*</span>) : ''}</label>\n                <div className=\"\">\n                    <input id={numberKTUR.name} name={numberKTUR.name}\n                        placeholder={numberKTUR.placeholder}\n                        ref={register({\n                            required: numberKTUR.validation.required_msg,\n                            minLength: {\n                                value: 6,\n                                message: numberKTUR.validation.minlength_msg\n                            }\n                        })}\n                        type=\"text\" className=\"form-control\" />\n                    <ErrorMessage as=\"p\" errors={errors} name={numberKTUR.name} />\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={numberSID.name} className=\"col-form-label\">{numberSID.label} {numberSID.required ? (<span className=\"required\">*</span>) : ''}</label>\n                <div className=\"\">\n                    <input id={numberSID.name} name={numberSID.name}\n                        placeholder={numberSID.placeholder}\n                        ref={register({\n                            required: numberSID.validation.required_msg,\n                            minLength: {\n                                value: 6,\n                                message: numberSID.validation.minlength_msg\n                            }\n                        })}\n                        type=\"text\"\n                        className=\"form-control\" />\n                    <ErrorMessage as=\"p\" errors={errors} name={numberSID.name} />\n                </div>\n            </div>\n            {/* {'state.rsvp.isSIDKTPVerified : ' + state.rsvp.isSIDKTPVerified} */}\n            {\n                state.rsvp.isSIDKTPVerified === true ? (\n                    <React.Fragment>\n                        <div className=\"form-group\">\n                            <label htmlFor={name.name} className=\"col-form-label\">{name.label} {name.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={name.name}\n                                    name={name.name}\n                                    ref={register({\n                                        required: name.validation.required_msg,\n                                    })}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                                <ErrorMessage as=\"p\" errors={errors} name={name.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={passport.name} className=\"col-form-label\">{passport.label} {passport.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={passport.name} name={passport.name}\n                                    placeholder={passport.placeholder}\n                                    ref={register({\n                                        required: passport.validation.required_msg\n                                    })}\n                                    type=\"text\"\n                                    className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={passport.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={address.name} className=\"col-form-label\">{address.label} {address.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={address.name}\n                                    name={address.name}\n                                    placeholder={address.placeholder}\n                                    ref={register({\n                                        required: address.validation.required_msg\n                                    })}\n                                    type=\"text\"\n                                    className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={address.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={numberOfShares.name} className=\"col-form-label\">{numberOfShares.label} {numberOfShares.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={numberOfShares.name}\n                                    name={numberOfShares.name}\n                                    placeholder={numberOfShares.placeholder}\n                                    ref={register({\n                                        required: numberOfShares.validation.required_msg\n                                    })}\n                                    type=\"text\"\n                                    className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={numberOfShares.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={phoneNumber.name} className=\"col-form-label\">{phoneNumber.label} {phoneNumber.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={phoneNumber.name}\n                                    name={phoneNumber.name}\n                                    placeholder={phoneNumber.placeholder}\n                                    ref={register({\n                                        required: phoneNumber.validation.required_msg,\n                                        pattern: {\n                                            value: phonePattern1,\n                                            message: phoneNumber.validation.pattern_msg\n                                        }\n                                    })}\n                                    type=\"text\" className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={phoneNumber.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={email.name} className=\"col-form-label\">{email.label} {email.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={email.name}\n                                    name={email.name}\n                                    placeholder={email.placeholder}\n                                    ref={register({\n                                        required: email.validation.required_msg,\n                                        pattern: {\n                                            value: emailPattern,\n                                            message: email.validation.pattern_msg\n                                        }\n                                    })}\n                                    type=\"email\"\n                                    className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={email.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div className=\"file-box\">\n                                <label htmlFor={uploadID.name} className=\"input-file-label\"><a className=\"button button--2 button--axiata\">{uploadID.label}</a>\n                                    {uploadID.placeholder} {uploadID.required ? (<span className=\"required\">*</span>) : ''}\n                                    <input id={uploadID.name}\n                                        name={uploadID.name}\n                                        ref={register({\n                                            required: uploadID.validation.required_msg\n                                        })}\n                                        type=\"file\"\n                                        className=\"input-file\" />\n                                </label>\n                            </div>\n                            {uploadID.fileInfoLine1 || uploadID.fileInfoLine2 ? (<div className=\"file-info\">\n                                {uploadID.fileInfoLine1 ? (<p>{uploadID.fileInfoLine1}</p>) : ''}\n                                {uploadID.fileInfoLine2 ? (<p>{uploadID.fileInfoLine2}</p>) : ''}\n                            </div>) : ''}\n                            <ErrorMessage as=\"p\" errors={errors} name={uploadID.name} />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div className=\"file-box\">\n                                <label htmlFor={uploadArticleOfAssociation.name} className=\"input-file-label\"><a className=\"button button--2 button--axiata\">{uploadArticleOfAssociation.label}</a>\n                                    {uploadArticleOfAssociation.placeholder} {uploadArticleOfAssociation.required ? (<span className=\"required\">*</span>) : ''}\n                                    <input id={uploadArticleOfAssociation.name}\n                                        name={uploadArticleOfAssociation.name}\n                                        ref={register({\n                                            required: uploadArticleOfAssociation.validation.required_msg\n                                        })}\n                                        type=\"file\"\n                                        className=\"input-file\" />\n                                </label>\n                            </div>\n                            {uploadArticleOfAssociation.fileInfoLine1 || uploadArticleOfAssociation.fileInfoLine2 ? (<div className=\"file-info\">\n                                {uploadArticleOfAssociation.fileInfoLine1 ? (<p>{uploadArticleOfAssociation.fileInfoLine1}</p>) : ''}\n                                {uploadArticleOfAssociation.fileInfoLine2 ? (<p>{uploadArticleOfAssociation.fileInfoLine2}</p>) : ''}\n                            </div>) : ''}\n                            <ErrorMessage as=\"p\" errors={errors} name={uploadArticleOfAssociation.name} />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div className=\"file-box\">\n                                <label htmlFor={uploadProxy.name} className=\"input-file-label\"><a className=\"button button--2 button--axiata\">{uploadProxy.label}</a>\n                                    {uploadProxy.placeholder} {uploadID.required ? (<span className=\"required\">*</span>) : ''}\n                                    <input id={uploadProxy.name}\n                                        name={uploadProxy.name}\n                                        ref={register({\n                                            required: uploadProxy.validation.required_msg\n                                        })}\n                                        type=\"file\"\n                                        className=\"input-file\" />\n                                </label>\n                            </div>\n                            {uploadProxy.fileInfoLine1 || uploadProxy.fileInfoLine2 ? (<div className=\"file-info\">\n                                {uploadProxy.fileInfoLine1 ? (<p>{uploadProxy.fileInfoLine1}</p>) : ''}\n                                {uploadProxy.fileInfoLine2 ? (<p>{uploadProxy.fileInfoLine2}</p>) : ''}\n                            </div>) : ''}\n                            <ErrorMessage as=\"p\" errors={errors} name={uploadProxy.name} />\n                        </div>\n                    </React.Fragment>) : (\"Please set subFields data\")}\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}