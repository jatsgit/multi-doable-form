{"ast":null,"code":"var _jsxFileName = \"/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useSWR = useSWR(\"/api/randomQuote\".concat(query.author ? '?author=' + query.author : ''), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var author = data === null || data === void 0 ? void 0 : data.author;\n  var quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = \"Loading...\";\n  if (error) quote = \"Failed to fetch quotes\";\n  return __jsx(Layout, {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-2784500225\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-2784500225\" + \" \" + \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"- \", author), __jsx(\"p\", {\n    className: \"jsx-2784500225\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Hello Next.js\"), __jsx(Link, {\n    href: \"/rsvp-scanner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"jsx-2784500225\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Goto RSVP Scanner\")), __jsx(_JSXStyle, {\n    id: \"2784500225\",\n    __self: this\n  }, \".main.jsx-2784500225{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-2784500225{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-2784500225{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXRpbmRlcmJpbXJhL3dvcmsveGxiYi9yc3ZwLW5leHQvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUN3QixBQUcyQixBQU1VLEFBTUcsVUFYUCxVQU1GLEdBTUEsR0FYSSxRQU1ILEdBTUEsT0FYRyxLQU1FLEdBTXBCLFVBWEEsT0FNQSIsImZpbGUiOiIvVXNlcnMvamF0aW5kZXJiaW1yYS93b3JrL3hsYmIvcnN2cC1uZXh0L3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xuaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InO1xuXG5mdW5jdGlvbiBmZXRjaGVyKHVybCkge1xuICAgIHJldHVybiBmZXRjaCh1cmwpLnRoZW4ociA9PiByLmpzb24oKSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG4gICAgY29uc3QgeyBxdWVyeSB9ID0gdXNlUm91dGVyKCk7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gdXNlU1dSKGAvYXBpL3JhbmRvbVF1b3RlJHtxdWVyeS5hdXRob3IgPyAnP2F1dGhvcj0nICsgcXVlcnkuYXV0aG9yIDogJyd9YCwgZmV0Y2hlcik7XG5cbiAgICBjb25zdCBhdXRob3IgPSBkYXRhPy5hdXRob3I7XG4gICAgbGV0IHF1b3RlID0gZGF0YT8ucXVvdGU7XG5cbiAgICBpZiAoIWRhdGEpIHF1b3RlID0gXCJMb2FkaW5nLi4uXCI7XG4gICAgaWYgKGVycm9yKSBxdW90ZSA9IFwiRmFpbGVkIHRvIGZldGNoIHF1b3Rlc1wiO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPExheW91dCBjbGFzc05hbWU9XCJtYWluXCI+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVvdGVcIj57cXVvdGV9PC9kaXY+XG4gICAgICAgICAgICB7YXV0aG9yICYmIDxzcGFuIGNsYXNzTmFtZT1cImF1dGhvclwiPi0ge2F1dGhvcn08L3NwYW4+fVxuXG4gICAgICAgICAgICA8cD5IZWxsbyBOZXh0LmpzPC9wPlxuXG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3JzdnAtc2Nhbm5lclwiPlxuICAgICAgICAgICAgICAgIDxhPkdvdG8gUlNWUCBTY2FubmVyPC9hPlxuICAgICAgICAgICAgPC9MaW5rPlxuXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgLm1haW4ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA5MDBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDMwMHB4IGF1dG87XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAucXVvdGUge1xuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBjdXJzaXZlO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjZTI0M2RlO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmF1dGhvciB7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9MYXlvdXQ+XG4gICAgKVxufSJdfQ== */\\n/*@ sourceURL=/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/jatinderbimra/work/xlbb/rsvp-next/pages/index.js"],"names":["useRouter","React","Link","Layout","useSWR","fetcher","url","fetch","then","r","json","Index","query","author","data","error","quote"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAAA,mBACVX,SAAS,EADC;AAAA,MACpBY,KADoB,cACpBA,KADoB;;AAAA,gBAEJR,MAAM,2BAAoBQ,KAAK,CAACC,MAAN,GAAe,aAAaD,KAAK,CAACC,MAAlC,GAA2C,EAA/D,GAAqER,OAArE,CAFF;AAAA,MAEpBS,IAFoB,WAEpBA,IAFoB;AAAA,MAEdC,KAFc,WAEdA,KAFc;;AAI5B,MAAMF,MAAM,GAAGC,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAED,MAArB;AACA,MAAIG,KAAK,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,KAAlB;AAEA,MAAI,CAACF,IAAL,EAAWE,KAAK,GAAG,YAAR;AACX,MAAID,KAAJ,EAAWC,KAAK,GAAG,wBAAR;AAEX,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CAFJ,EAGKH,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAHf,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,EAOI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAPJ;AAAA;AAAA;AAAA,gvFADJ;AAiCH","sourcesContent":["import { useRouter } from 'next/router';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json())\n}\n\nexport default function Index() {\n    const { query } = useRouter();\n    const { data, error } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher);\n\n    const author = data?.author;\n    let quote = data?.quote;\n\n    if (!data) quote = \"Loading...\";\n    if (error) quote = \"Failed to fetch quotes\";\n\n    return (\n        <Layout className=\"main\">\n\n            <div className=\"quote\">{quote}</div>\n            {author && <span className=\"author\">- {author}</span>}\n\n            <p>Hello Next.js</p>\n\n            <Link href=\"/rsvp-scanner\">\n                <a>Goto RSVP Scanner</a>\n            </Link>\n\n            <style jsx>{`\n                .main {\n                width: 90%;\n                max-width: 900px;\n                margin: 300px auto;\n                text-align: center;\n                }\n                .quote {\n                font-family: cursive;\n                color: #e243de;\n                font-size: 24px;\n                padding-bottom: 10px;\n                }\n                .author {\n                font-family: sans-serif;\n                color: #559834;\n                font-size: 20px;\n                }\n            `}</style>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}