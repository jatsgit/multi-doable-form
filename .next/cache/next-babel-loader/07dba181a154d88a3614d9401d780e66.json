{"ast":null,"code":"var _jsxFileName = \"/Users/jatinderbimra/work/xlbb/rsvp-next/components/RSVPForm/proxy-holder/sub-fields.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { ErrorMessage, useFormContext } from 'react-hook-form';\nimport { useOvermind } from '../../../overmind';\nimport { emailPattern, KTP_SID_SEARCH_HIT_MIN_CHARS, phonePattern1 } from '../../../util/constants';\nimport { verifyCaptcha } from '../../../util/index';\nexport default function RSVPProxyHolderSubFields(props) {\n  const {\n    state,\n    actions\n  } = useOvermind();\n  const {\n    register,\n    watch\n  } = useFormContext();\n  console.log('data from props', props.data);\n  const {\n    data\n  } = props;\n  const {\n    numberKTUR,\n    numberSID,\n    name,\n    numberKTPOrPassport,\n    address,\n    numberOfShares,\n    phoneNumber,\n    email,\n    uploadID,\n    uploadArticleOfAssociation\n  } = data || {};\n  const watchNoKtur = watch(\"numberKTUR\");\n  const watchNoSID = watch(\"numberSID\");\n  const watchHidCaptcha = watch(\"hidGRecaptchaElement\");\n\n  const onSubmit = (data, e) => {\n    console.log(\"Form submitted \", data, e);\n  }; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(() => {// if(!window.grecaptcha) reCaptchaInitialize('v2');\n    // console.log('watchHidCaptcha', watchHidCaptcha);\n  }, [watchHidCaptcha]);\n  useEffect(() => {\n    if (watchNoKtur && watchNoKtur.length > KTP_SID_SEARCH_HIT_MIN_CHARS && watchNoSID && watchNoSID.length > KTP_SID_SEARCH_HIT_MIN_CHARS) {\n      console.log('trigger api call to verify use is having valid sid and ktp '); // actions.rsvp.verifyValidUser();\n\n      actions.rsvp.updateSIDKTPVerifedStatus();\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: numberKTUR.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, numberKTUR.label, \" \", numberKTUR.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: numberKTUR.name,\n    name: numberKTUR.name,\n    placeholder: numberKTUR.placeholder,\n    ref: register({\n      required: numberKTUR.validation.required_msg,\n      minLength: {\n        value: 6,\n        message: numberKTUR.validation.minlength_msg\n      }\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: numberKTUR.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: numberSID.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, numberSID.label, \" \", numberSID.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: numberSID.name,\n    name: numberSID.name,\n    placeholder: numberSID.placeholder,\n    ref: register({\n      required: numberSID.validation.required_msg,\n      minLength: {\n        value: 6,\n        message: numberSID.validation.minlength_msg\n      }\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: numberSID.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))), __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: name.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, name.label, \" \", name.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: name.name,\n    name: name.name,\n    ref: register({\n      required: name.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: name.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: numberKTPOrPassport.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, numberKTPOrPassport.label, \" \", numberKTPOrPassport.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: numberKTPOrPassport.name,\n    name: numberKTPOrPassport.name,\n    placeholder: numberKTPOrPassport.placeholder,\n    ref: register({\n      required: numberKTPOrPassport.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: numberKTPOrPassport.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: address.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, address.label, \" \", address.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: address.name,\n    name: address.name,\n    placeholder: address.placeholder,\n    ref: register({\n      required: address.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: address.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: numberOfShares.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, numberOfShares.label, \" \", numberOfShares.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: numberOfShares.name,\n    name: numberOfShares.name,\n    placeholder: numberOfShares.placeholder,\n    ref: register({\n      required: numberOfShares.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: numberOfShares.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: phoneNumber.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, phoneNumber.label, \" \", phoneNumber.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: phoneNumber.name,\n    name: phoneNumber.name,\n    placeholder: phoneNumber.placeholder,\n    ref: register({\n      required: phoneNumber.validation.required_msg,\n      pattern: {\n        value: phonePattern1,\n        message: phoneNumber.validation.pattern_msg\n      }\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: phoneNumber.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: email.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, email.label, \" \", email.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"*\") : ''), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: email.name,\n    name: email.name,\n    placeholder: email.placeholder,\n    ref: register({\n      required: email.validation.required_msg,\n      pattern: {\n        value: emailPattern,\n        message: email.validation.pattern_msg\n      }\n    }),\n    type: \"email\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: email.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"file-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: uploadID.name,\n    className: \"input-file-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"button button--2 button--axiata\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, uploadID.label), uploadID.placeholder, \" \", uploadID.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"*\") : '', __jsx(\"input\", {\n    id: uploadID.name,\n    name: uploadID.name,\n    ref: register({\n      required: uploadID.validation.required_msg\n    }),\n    type: \"file\",\n    className: \"input-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }))), uploadID.fileInfoLine1 || uploadID.fileInfoLine2 ? __jsx(\"div\", {\n    className: \"file-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, uploadID.fileInfoLine1 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, uploadID.fileInfoLine1) : '', uploadID.fileInfoLine2 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, uploadID.fileInfoLine2) : '') : '', __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: uploadID.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"file-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: uploadArticleOfAssociation.name,\n    className: \"input-file-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"button button--2 button--axiata\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, uploadArticleOfAssociation.label), uploadArticleOfAssociation.placeholder, \" \", uploadArticleOfAssociation.required ? __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"*\") : '', __jsx(\"input\", {\n    id: uploadArticleOfAssociation.name,\n    name: uploadArticleOfAssociation.name,\n    ref: register({\n      required: uploadArticleOfAssociation.validation.required_msg\n    }),\n    type: \"file\",\n    className: \"input-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }))), uploadArticleOfAssociation.fileInfoLine1 || uploadArticleOfAssociation.fileInfoLine2 ? __jsx(\"div\", {\n    className: \"file-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, uploadArticleOfAssociation.fileInfoLine1 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, uploadArticleOfAssociation.fileInfoLine1) : '', uploadArticleOfAssociation.fileInfoLine2 ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, uploadArticleOfAssociation.fileInfoLine2) : '') : '', __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: uploadArticleOfAssociation.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/jatinderbimra/work/xlbb/rsvp-next/components/RSVPForm/proxy-holder/sub-fields.js"],"names":["React","useEffect","ErrorMessage","useFormContext","useOvermind","emailPattern","KTP_SID_SEARCH_HIT_MIN_CHARS","phonePattern1","verifyCaptcha","RSVPProxyHolderSubFields","props","state","actions","register","watch","console","log","data","numberKTUR","numberSID","name","numberKTPOrPassport","address","numberOfShares","phoneNumber","email","uploadID","uploadArticleOfAssociation","watchNoKtur","watchNoSID","watchHidCaptcha","onSubmit","e","length","rsvp","updateSIDKTPVerifedStatus","label","required","placeholder","validation","required_msg","minLength","value","message","minlength_msg","errors","pattern","pattern_msg","fileInfoLine1","fileInfoLine2"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { ErrorMessage, useFormContext } from 'react-hook-form';\nimport { useOvermind } from '../../../overmind';\nimport { emailPattern, KTP_SID_SEARCH_HIT_MIN_CHARS, phonePattern1 } from '../../../util/constants';\nimport { verifyCaptcha } from '../../../util/index';\n\n\nexport default function RSVPProxyHolderSubFields(props) {\n\n    const { state, actions } = useOvermind();\n    const {\n        register,\n        watch,\n      } = useFormContext();\n\n    console.log('data from props', props.data);\n\n    const { data } = props;\n    const {\n        numberKTUR,\n        numberSID,\n        name,\n        numberKTPOrPassport,\n        address,\n        numberOfShares,\n        phoneNumber,\n        email,\n        uploadID,\n        uploadArticleOfAssociation,\n    } = data || {};\n\n    const watchNoKtur = watch(\"numberKTUR\");\n    const watchNoSID = watch(\"numberSID\");\n    const watchHidCaptcha = watch(\"hidGRecaptchaElement\");\n\n    const onSubmit = (data, e) => {\n        console.log(\"Form submitted \", data, e)\n    };\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n        // if(!window.grecaptcha) reCaptchaInitialize('v2');\n\n        // console.log('watchHidCaptcha', watchHidCaptcha);\n\n    }, [watchHidCaptcha]);\n\n    useEffect(() => {\n        \n        if ((watchNoKtur && watchNoKtur.length > KTP_SID_SEARCH_HIT_MIN_CHARS) && (watchNoSID && watchNoSID.length > KTP_SID_SEARCH_HIT_MIN_CHARS)) {\n            console.log('trigger api call to verify use is having valid sid and ktp ');\n\n            // actions.rsvp.verifyValidUser();\n            actions.rsvp.updateSIDKTPVerifedStatus();\n        }\n    });\n\n    return (\n        <div>\n            {/* <pre> {data && JSON.stringify(data, null, 2)}</pre> */}\n            <div className=\"form-group\">\n                <label htmlFor={numberKTUR.name} className=\"col-form-label\">{numberKTUR.label} {numberKTUR.required ? (<span className=\"required\">*</span>) : ''}</label>\n                <div className=\"\">\n                    <input id={numberKTUR.name} name={numberKTUR.name}\n                        placeholder={numberKTUR.placeholder}\n                        ref={register({\n                            required: numberKTUR.validation.required_msg,\n                            minLength: {\n                                value: 6,\n                                message: numberKTUR.validation.minlength_msg\n                            }\n                        })}\n                        type=\"text\" className=\"form-control\" />\n                    <ErrorMessage as=\"p\" errors={errors} name={numberKTUR.name} />\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={numberSID.name} className=\"col-form-label\">{numberSID.label} {numberSID.required ? (<span className=\"required\">*</span>) : ''}</label>\n                <div className=\"\">\n                    <input id={numberSID.name} name={numberSID.name}\n                        placeholder={numberSID.placeholder}\n                        ref={register({\n                            required: numberSID.validation.required_msg,\n                            minLength: {\n                                value: 6,\n                                message: numberSID.validation.minlength_msg\n                            }\n                        })}\n                        type=\"text\"\n                        className=\"form-control\" />\n                    <ErrorMessage as=\"p\" errors={errors} name={numberSID.name} />\n                </div>\n            </div>\n            {/* {'state.rsvp.isSIDKTPVerified : ' + state.rsvp.isSIDKTPVerified} */}\n            {/* {\n                state.rsvp.isSIDKTPVerified === true ? ( */}\n                    <React.Fragment>\n                        <div className=\"form-group\">\n                            <label htmlFor={name.name} className=\"col-form-label\">{name.label} {name.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={name.name}\n                                    name={name.name}\n                                    ref={register({\n                                        required: name.validation.required_msg,\n                                    })}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                                <ErrorMessage as=\"p\" errors={errors} name={name.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={numberKTPOrPassport.name} className=\"col-form-label\">{numberKTPOrPassport.label} {numberKTPOrPassport.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={numberKTPOrPassport.name} name={numberKTPOrPassport.name}\n                                    placeholder={numberKTPOrPassport.placeholder}\n                                    ref={register({\n                                        required: numberKTPOrPassport.validation.required_msg\n                                    })}\n                                    type=\"text\"\n                                    className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={numberKTPOrPassport.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={address.name} className=\"col-form-label\">{address.label} {address.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={address.name}\n                                    name={address.name}\n                                    placeholder={address.placeholder}\n                                    ref={register({\n                                        required: address.validation.required_msg\n                                    })}\n                                    type=\"text\"\n                                    className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={address.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={numberOfShares.name} className=\"col-form-label\">{numberOfShares.label} {numberOfShares.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={numberOfShares.name}\n                                    name={numberOfShares.name}\n                                    placeholder={numberOfShares.placeholder}\n                                    ref={register({\n                                        required: numberOfShares.validation.required_msg\n                                    })}\n                                    type=\"text\"\n                                    className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={numberOfShares.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={phoneNumber.name} className=\"col-form-label\">{phoneNumber.label} {phoneNumber.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={phoneNumber.name}\n                                    name={phoneNumber.name}\n                                    placeholder={phoneNumber.placeholder}\n                                    ref={register({\n                                        required: phoneNumber.validation.required_msg,\n                                        pattern: {\n                                            value: phonePattern1,\n                                            message: phoneNumber.validation.pattern_msg\n                                        }\n                                    })}\n                                    type=\"text\" className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={phoneNumber.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor={email.name} className=\"col-form-label\">{email.label} {email.required ? (<span className=\"required\">*</span>) : ''}</label>\n                            <div className=\"\">\n                                <input id={email.name}\n                                    name={email.name}\n                                    placeholder={email.placeholder}\n                                    ref={register({\n                                        required: email.validation.required_msg,\n                                        pattern: {\n                                            value: emailPattern,\n                                            message: email.validation.pattern_msg\n                                        }\n                                    })}\n                                    type=\"email\"\n                                    className=\"form-control\" />\n                                <ErrorMessage as=\"p\" errors={errors} name={email.name} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div className=\"file-box\">\n                                <label htmlFor={uploadID.name} className=\"input-file-label\"><a className=\"button button--2 button--axiata\">{uploadID.label}</a>\n                                    {uploadID.placeholder} {uploadID.required ? (<span className=\"required\">*</span>) : ''}\n                                    <input id={uploadID.name}\n                                        name={uploadID.name}\n                                        ref={register({\n                                            required: uploadID.validation.required_msg\n                                        })}\n                                        type=\"file\"\n                                        className=\"input-file\" />\n                                </label>\n                            </div>\n                            {uploadID.fileInfoLine1 || uploadID.fileInfoLine2 ? (<div className=\"file-info\">\n                                {uploadID.fileInfoLine1 ? (<p>{uploadID.fileInfoLine1}</p>) : ''}\n                                {uploadID.fileInfoLine2 ? (<p>{uploadID.fileInfoLine2}</p>) : ''}\n                            </div>) : ''}\n                            <ErrorMessage as=\"p\" errors={errors} name={uploadID.name} />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div className=\"file-box\">\n                                <label htmlFor={uploadArticleOfAssociation.name} className=\"input-file-label\"><a className=\"button button--2 button--axiata\">{uploadArticleOfAssociation.label}</a>\n                                    {uploadArticleOfAssociation.placeholder} {uploadArticleOfAssociation.required ? (<span className=\"required\">*</span>) : ''}\n                                    <input id={uploadArticleOfAssociation.name}\n                                        name={uploadArticleOfAssociation.name}\n                                        ref={register({\n                                            required: uploadArticleOfAssociation.validation.required_msg\n                                        })}\n                                        type=\"file\"\n                                        className=\"input-file\" />\n                                </label>\n                            </div>\n                            {uploadArticleOfAssociation.fileInfoLine1 || uploadArticleOfAssociation.fileInfoLine2 ? (<div className=\"file-info\">\n                                {uploadArticleOfAssociation.fileInfoLine1 ? (<p>{uploadArticleOfAssociation.fileInfoLine1}</p>) : ''}\n                                {uploadArticleOfAssociation.fileInfoLine2 ? (<p>{uploadArticleOfAssociation.fileInfoLine2}</p>) : ''}\n                            </div>) : ''}\n                            <ErrorMessage as=\"p\" errors={errors} name={uploadArticleOfAssociation.name} />\n                        </div>\n                    </React.Fragment>\n                    {/* ) : (\"Please set subFields data\")} */}\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}