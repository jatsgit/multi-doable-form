{"ast":null,"code":"var _jsxFileName = \"/Users/jatinderbimra/work/xlbb/rsvp-next/components/RSVPForm/personal/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport { useForm, ErrorMessage } from 'react-hook-form';\nimport { useOvermind } from '../../../overmind';\nimport { phonePattern1, emailPattern } from '../../../util/constants';\nimport { reCaptchaInitialize, verifyCaptcha } from '../../../util/index';\nexport default function RSVPPersonal(props) {\n  var _useOvermind = useOvermind(),\n      state = _useOvermind.state,\n      actions = _useOvermind.actions;\n\n  var _useForm = useForm({\n    mode: 'onChange',\n    validateCriteriaMode: \"all\"\n  }),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      formState = _useForm.formState;\n\n  var _ref = state.rsvp.personal && state.rsvp.personal.data || {},\n      numberKTUR = _ref.numberKTUR,\n      numberSID = _ref.numberSID,\n      name = _ref.name,\n      numberKTPOrPassport = _ref.numberKTPOrPassport,\n      address = _ref.address,\n      numberOfShares = _ref.numberOfShares,\n      phoneNumber = _ref.phoneNumber,\n      email = _ref.email,\n      uploadID = _ref.uploadID,\n      captcha = _ref.captcha,\n      submitButton = _ref.submitButton,\n      successMsgTitle = _ref.successMsgTitle,\n      successMsg = _ref.successMsg,\n      failedMsgTitle = _ref.failedMsgTitle,\n      failedMsg = _ref.failedMsg,\n      redirectURL = _ref.redirectURL;\n\n  var watchNoKtur = watch(\"numberKTUR\");\n  var watchNoSID = watch(\"numberSID\");\n  var watchHidCaptcha = watch('hidGRecaptchaElement');\n\n  var onSubmit = function onSubmit(data, e) {\n    console.log(\"Form submitted \", data, e);\n  }; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(function () {// if(!window.grecaptcha) reCaptchaInitialize('v2');\n    // console.log('watchHidCaptcha', watchHidCaptcha);\n  }, [watchHidCaptcha]);\n  useEffect(function () {\n    if (state.rsvp.isSIDKTPVerified) {\n      // verifyCaptcha\n      verifyCaptcha('hidGRecaptchaElement');\n    }\n\n    console.log('watchNoKtur', watchNoKtur);\n    console.log('watchNoSID', watchNoSID);\n\n    if (watchNoKtur && watchNoKtur.length > 6 && watchNoSID && watchNoSID.length > 6) {\n      console.log('trigger api call to verify use is having valid sid and ktp '); // actions.rsvp.verifyValidUser();\n\n      actions.rsvp.updateSIDKTPVerifedStatus(); // if(window.grecaptcha) grecaptcha.reset('gRecaptchaElement');\n\n      if (!window.grecaptcha) reCaptchaInitialize('v2');\n    }\n  });\n  return __jsx(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Personal\"), __jsx(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \" \", state.rsvp.personal.data && JSON.stringify(state.rsvp.personal.data, null, 2)), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: numberKTUR.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"No KTUR \", __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"*\")), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: numberKTUR.name,\n    name: numberKTUR.name,\n    placeholder: numberKTUR.placeholder,\n    ref: register({\n      required: numberKTUR.validation.required_msg,\n      minLength: {\n        value: 6,\n        message: numberKTUR.validation.minlength_msg\n      }\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: numberKTUR.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: numberSID.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"No SID/AKSes.KSEI \", __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"*\")), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: numberSID.name,\n    name: numberSID.name,\n    placeholder: numberSID.placeholder,\n    ref: register({\n      required: numberSID.validation.required_msg,\n      minLength: {\n        value: 6,\n        message: numberSID.validation.minlength_msg\n      }\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: numberSID.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))), state.rsvp.isSIDKTPVerified === true ? __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: name.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Name \", __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"*\")), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: name.name,\n    name: name.name,\n    ref: register({\n      required: name.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: name.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: passport.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"NIK (KTP)/Passport \", __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"*\")), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: passport.name,\n    name: passport.name,\n    placeholder: passport.placeholder,\n    ref: register({\n      required: passport.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: passport.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: address.name,\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Address \", __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"*\")), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: address.name,\n    name: address.name,\n    ref: register({\n      required: address.validation.required_msg\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: address.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"numberOfShares\",\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Jumlah Saham (sesuai KTUR) \", __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"*\")), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    name: \"numberOfShares\",\n    ref: register({\n      required: 'Jumlah Saham (sesuai KTUR) is required'\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    id: \"numberOfShares\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: \"numberOfShares\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"phoneNumber\",\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Phone/Mobile \", __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"*\")), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    name: \"phoneNumber\",\n    ref: register({\n      required: 'Phone number is required',\n      pattern: {\n        value: phonePattern1,\n        message: \"Invalid phone number\"\n      }\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    id: \"phoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: \"phoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Email \", __jsx(\"span\", {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"*\")), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: 'Email is required',\n      pattern: {\n        value: emailPattern,\n        message: \"Invalid email\"\n      }\n    }),\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"file-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"input-file-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"button button--2 button--axiata\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Upload ID\"), \"No file chosen\", __jsx(\"input\", {\n    name: \"uploadID\",\n    ref: register({\n      required: 'Upload ID is required'\n    }),\n    type: \"file\",\n    className: \"input-file\",\n    id: \"uploadID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"file-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Ukuran berkas harus kurang dari 10 MB.s\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Jenis file yang diperbolehkan: .jpg , .jpeg, .png, .pdf\")), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: \"uploadID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"g-recaptcha\",\n    id: \"gRecaptchaElement\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"hidGRecaptchaElement\",\n    defaultValue: state.rsvp.captchaValue,\n    ref: register({\n      required: 'Please validate captcha'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: \"hidGRecaptchaElement\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"clearfix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-check form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    name: \"userAcceptance\",\n    id: \"userAcceptance\",\n    ref: register({\n      required: 'Please accept the terms and condition'\n    }),\n    type: \"checkbox\",\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"userAcceptance\",\n    className: \"col-form-label pl-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \" Check to agree xl axiata terms and conditions.\")), __jsx(ErrorMessage, {\n    as: \"p\",\n    errors: errors,\n    name: \"userAcceptance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-group text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Submit\")))) : __jsx(\"div\", {\n    className: \"text-center text-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Enter No KTUR & No SID/AKSes.KSEI to verify your status\"));\n}","map":{"version":3,"sources":["/Users/jatinderbimra/work/xlbb/rsvp-next/components/RSVPForm/personal/index.js"],"names":["React","useEffect","useRef","useForm","ErrorMessage","useOvermind","phonePattern1","emailPattern","reCaptchaInitialize","verifyCaptcha","RSVPPersonal","props","state","actions","mode","validateCriteriaMode","register","errors","handleSubmit","watch","formState","rsvp","personal","data","numberKTUR","numberSID","name","numberKTPOrPassport","address","numberOfShares","phoneNumber","email","uploadID","captcha","submitButton","successMsgTitle","successMsg","failedMsgTitle","failedMsg","redirectURL","watchNoKtur","watchNoSID","watchHidCaptcha","onSubmit","e","console","log","isSIDKTPVerified","length","updateSIDKTPVerifedStatus","window","grecaptcha","JSON","stringify","placeholder","required","validation","required_msg","minLength","value","message","minlength_msg","passport","pattern","captchaValue"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useForm, ErrorMessage } from 'react-hook-form';\nimport { useOvermind } from '../../../overmind';\n\nimport { phonePattern1, emailPattern } from '../../../util/constants';\nimport { reCaptchaInitialize, verifyCaptcha } from '../../../util/index';\n\nexport default function RSVPPersonal(props) {\n\n    const { state, actions } = useOvermind();\n    const { register, errors, handleSubmit, watch, formState } = useForm({\n        mode: 'onChange',\n        validateCriteriaMode: \"all\"\n    });\n\n    const { \n        numberKTUR, numberSID, name, \n        numberKTPOrPassport, address, numberOfShares, phoneNumber,\n        email,\n        uploadID,\n        captcha,\n        submitButton,\n        successMsgTitle,\n        successMsg,\n        failedMsgTitle,\n        failedMsg,\n        redirectURL\n    } = state.rsvp.personal && state.rsvp.personal.data || {};\n\n\n    const watchNoKtur = watch(\"numberKTUR\");\n    const watchNoSID = watch(\"numberSID\");\n    const watchHidCaptcha = watch('hidGRecaptchaElement');\n\n    const onSubmit = (data, e) => {\n        console.log(\"Form submitted \", data, e)\n    };\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n        // if(!window.grecaptcha) reCaptchaInitialize('v2');\n        \n        // console.log('watchHidCaptcha', watchHidCaptcha);\n        \n    }, [watchHidCaptcha]);\n\n    useEffect(()=> {\n        if(state.rsvp.isSIDKTPVerified){\n            // verifyCaptcha\n            verifyCaptcha('hidGRecaptchaElement');\n        }\n        console.log('watchNoKtur', watchNoKtur);\n        console.log('watchNoSID', watchNoSID);\n\n        if((watchNoKtur && watchNoKtur.length > 6) && (watchNoSID  && watchNoSID.length > 6)) {\n            console.log('trigger api call to verify use is having valid sid and ktp ');\n\n            // actions.rsvp.verifyValidUser();\n\n            actions.rsvp.updateSIDKTPVerifedStatus();\n\n            // if(window.grecaptcha) grecaptcha.reset('gRecaptchaElement');\n            if(!window.grecaptcha) reCaptchaInitialize('v2');\n        }\n    });\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n            <h2>Personal</h2>\n           <pre> {state.rsvp.personal.data && JSON.stringify(state.rsvp.personal.data, null, 2)}</pre>\n            <div className=\"form-group\">\n                <label htmlFor={numberKTUR.name} className=\"col-form-label\">No KTUR <span className=\"required\">*</span></label>\n                <div className=\"\">\n                    <input id={numberKTUR.name} name={numberKTUR.name} \n                        placeholder={numberKTUR.placeholder}\n                        ref={register({ \n                            required: numberKTUR.validation.required_msg,\n                        minLength: {\n                            value: 6,\n                            message: numberKTUR.validation.minlength_msg\n                          }\n                     })} \n                        type=\"text\" className=\"form-control\" />\n                    <ErrorMessage as=\"p\" errors={errors} name={numberKTUR.name} />\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={numberSID.name} className=\"col-form-label\">No SID/AKSes.KSEI <span className=\"required\">*</span></label>\n                <div className=\"\">\n                    <input id={numberSID.name} name={numberSID.name} \n                        placeholder={numberSID.placeholder}\n                        ref={register({ \n                            required: numberSID.validation.required_msg,\n                            minLength: {\n                                value: 6,\n                                message: numberSID.validation.minlength_msg\n                            }\n                        })} \n                        type=\"text\" \n                        className=\"form-control\" />\n                    <ErrorMessage as=\"p\" errors={errors} name={numberSID.name} />\n                </div>\n            </div>\n            {/* {'state.rsvp.isSIDKTPVerified : ' + state.rsvp.isSIDKTPVerified} */}\n            {\n                state.rsvp.isSIDKTPVerified === true ? (\n                <React.Fragment> \n                    <div className=\"form-group\">\n                        <label htmlFor={name.name} className=\"col-form-label\">Name <span className=\"required\">*</span></label>\n                        <div className=\"\">\n                            <input id={name.name} \n                                name={name.name} \n                                ref={register({ \n                                    required: name.validation.required_msg,\n                                 })} \n                                 type=\"text\" className=\"form-control\"\n                            />\n                            <ErrorMessage as=\"p\" errors={errors} name={name.name} />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor={passport.name} className=\"col-form-label\">NIK (KTP)/Passport <span className=\"required\">*</span></label>\n                        <div className=\"\">\n                            <input id={passport.name} name={passport.name} \n                                placeholder={passport.placeholder}\n                                ref={register({ \n                                    required: passport.validation.required_msg\n                                 })} \n                                 type=\"text\" \n                                 className=\"form-control\" />\n                            <ErrorMessage as=\"p\" errors={errors} name={passport.name} />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor={address.name} className=\"col-form-label\">Address <span className=\"required\">*</span></label>\n                        <div className=\"\">\n                            <input id={address.name}\n                                name={address.name} \n                                ref={register({ \n                                    required: address.validation.required_msg \n                                })} \n                                type=\"text\" \n                                className=\"form-control\"  />\n                            <ErrorMessage as=\"p\" errors={errors} name={address.name} />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"numberOfShares\" className=\"col-form-label\">Jumlah Saham (sesuai KTUR) <span className=\"required\">*</span></label>\n                        <div className=\"\">\n                            <input name=\"numberOfShares\" ref={register({ required: 'Jumlah Saham (sesuai KTUR) is required' })} type=\"text\" className=\"form-control\" id=\"numberOfShares\" />\n                            <ErrorMessage as=\"p\" errors={errors} name=\"numberOfShares\" />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"phoneNumber\" className=\"col-form-label\">Phone/Mobile <span className=\"required\">*</span></label>\n                        <div className=\"\">\n                            <input name=\"phoneNumber\" ref={register({\n                                required: 'Phone number is required',\n                                pattern: {\n                                    value: phonePattern1,\n                                    message: \"Invalid phone number\"\n                                }\n                            }\n                            )} type=\"text\" className=\"form-control\" id=\"phoneNumber\" />\n                            <ErrorMessage as=\"p\" errors={errors} name=\"phoneNumber\" />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\" className=\"col-form-label\">Email <span className=\"required\">*</span></label>\n                        <div className=\"\">\n                            <input name=\"email\" \n                            ref={register({ required: 'Email is required',\n                            pattern: {\n                                value: emailPattern,\n                                message: \"Invalid email\"\n                            } })} \n                            type=\"email\" className=\"form-control\" id=\"email\" />\n                            <ErrorMessage as=\"p\" errors={errors} name=\"email\" />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        {/* <label htmlFor=\"uploadID\" className=\"col-form-label\">Upload ID <span className=\"required\">*</span></label> */}\n                        {/* <div className=\"\">\n                            <input name=\"uploadID\" ref={register({ required: 'This is required' })} type=\"file\" className=\"form-control\" id=\"uploadID\" />\n                        </div> */}\n                        <div className=\"file-box\">\n                            <label className=\"input-file-label\"><a className=\"button button--2 button--axiata\">Upload ID</a>\n                                No file chosen\n                                <input name=\"uploadID\" ref={register({ required: 'Upload ID is required' })} type=\"file\" className=\"input-file\" id=\"uploadID\" />\n                            </label>\n                        </div>\n                        <div className=\"file-info\">\n                            <p>Ukuran berkas harus kurang dari 10 MB.s</p>\n                            <p>Jenis file yang diperbolehkan: .jpg , .jpeg, .png, .pdf</p>\n                        </div>\n                        <ErrorMessage as=\"p\" errors={errors} name=\"uploadID\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"g-recaptcha\" id=\"gRecaptchaElement\"></div>\n                        <input type=\"hidden\" name=\"hidGRecaptchaElement\" defaultValue={state.rsvp.captchaValue} \n                            ref={register({required: 'Please validate captcha'})}/>\n                        <ErrorMessage as=\"p\" errors={errors} name=\"hidGRecaptchaElement\" />\n                    </div>\n\n                    <div className=\"clearfix\">\n                        <div className=\"form-check form-check-inline\">\n                            <input name=\"userAcceptance\" id=\"userAcceptance\" ref={register({ required: 'Please accept the terms and condition' })} type=\"checkbox\" className=\"form-check-label\" />\n                            <label htmlFor=\"userAcceptance\" className=\"col-form-label pl-1\"> Check to agree xl axiata terms and conditions.</label>\n                        </div>\n                        <ErrorMessage as=\"p\" errors={errors} name=\"userAcceptance\" />\n                    </div>\n\n                    <div className=\"form-group text-center\">\n                        <div className=\"\">\n                        {/* <pre>{JSON.stringify(formState, null, 2)}</pre> */}\n\n                            <button type=\"submit\" className=\"button\">Submit</button>\n                        </div>\n                    </div>\n                </React.Fragment>) : (<div className=\"text-center text-info\">Enter No KTUR &amp; No SID/AKSes.KSEI to verify your status</div>) }\n           \n        </form>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}