{"version":3,"file":"static/webpack/static/development/pages/index.js.fbd3c9dde58cd54281f6.hot-update.js","sources":["webpack:///./components/RSVPForm/index.js"],"sourcesContent":["import * as React from 'react';\nimport './rsvp.form.scss';\n\nimport RSVPPersonal from './personal';\nimport RSVPEntity from './entity';\nimport RSVProxyHolder from './proxy-holder';\nimport { useOvermind } from '../../overmind';\n\n\nfunction RSVPForm(props) {\n    const { state, actions } = useOvermind();\n    console.log('STATE from RSVP form file ', state);\n    console.log('ACTIONS from RSVP form file ', actions);\n\n    const handleRSVPTypeChange = (e) => {\n        e.preventDefault();\n        // this.setState({ rsvpType: e.target.value });\n        actions.rsvp.handleChangeRSVPType(e.target.value);\n\n        console.log('changed triggered!', e.target.value);\n    }\n\n    return (\n        <div className=\"rsvp-form-wrapper\">\n\n            <h1>{state.rsvp.title}</h1>\n            <div className=\"form-group\">\n                <label htmlFor=\"\">Select RSVP Type: </label>\n                <select className=\"form-control\" value={state.rsvp.selectedType} onChange={ (e) => handleRSVPTypeChange(e)}>\n                    {state.rsvp.types.map((type, i) => (<option key={i} value={type.value}>{type.text}</option>))}\n                </select>\n            </div>\n            {/* {'state.rsvp.selectedType : ' + state.rsvp.selectedType} */}\n            {/* {state.rsvp.selectedType === 'personal' && <RSVPPersonal props={state.rsvp.personal} />}\n            {state.rsvp.selectedType === 'entity' && <RSVPEntity props={state.rsvp.entity} />} */}\n            {state.rsvp.selectedType === 'proxyholder' && <RSVProxyHolder props={state.rsvp.proxyHolder} />}\n\n        </div>\n    )\n}\n\nexport default RSVPForm;"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}